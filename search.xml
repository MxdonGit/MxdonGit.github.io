<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2021/12/05/%E6%9C%80%E5%90%8E%EF%BC%8C%E7%82%B9%E4%B8%AA%E5%85%B3%E6%B3%A8%E4%B8%8D%E8%BF%B7%E8%B7%AF/"/>
      <url>/2021/12/05/%E6%9C%80%E5%90%8E%EF%BC%8C%E7%82%B9%E4%B8%AA%E5%85%B3%E6%B3%A8%E4%B8%8D%E8%BF%B7%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="最后，点个关注不迷路"><a href="#最后，点个关注不迷路" class="headerlink" title="最后，点个关注不迷路"></a>最后，点个关注不迷路</h1><p><img src="https://p.pstatp.com/origin/137610000bfce4e396a63"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/12/05/%E8%87%AA%E5%B7%B1%E5%B0%81%E8%A3%85%E4%B8%80%E4%B8%AA%E4%B8%93%E5%B1%9E%E7%9A%84Windows10%E7%B3%BB%E7%BB%9F/"/>
      <url>/2021/12/05/%E8%87%AA%E5%B7%B1%E5%B0%81%E8%A3%85%E4%B8%80%E4%B8%AA%E4%B8%93%E5%B1%9E%E7%9A%84Windows10%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="自己封装一个专属的Windows10系统"><a href="#自己封装一个专属的Windows10系统" class="headerlink" title="自己封装一个专属的Windows10系统"></a>自己封装一个专属的Windows10系统</h1><h2 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h2><p>每次重装都要把软件重新整一遍，十分麻烦，所以就寻思着直接封装一个集成了软件的系统。但是为啥只预装这些软件呢，因为软件和系统更新换代快，没必要太多，另外我自己也没必要老是重装，给大家贡献一款上手就能用的方便系统玩玩得了。</p><span id="more"></span><blockquote><p>集成的软件从浏览器、到下载、到文件查找、到清理、卸载、安全，基本适用于各行各业的伙伴使用。至于开发，不会配置开发环境的话还干开发嘛？/滑稽</p></blockquote><p><img src="https://gitee.com/mxdon/img/raw/master/2020/20200404013123694.png" alt="预想效果"></p><h2 id="使用NTLITE精简一个系统"><a href="#使用NTLITE精简一个系统" class="headerlink" title="使用NTLITE精简一个系统"></a>使用NTLITE精简一个系统</h2><p>下载：<code>https://www.ntlite.com/download/</code><br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331082105544.png"><br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331082445844.png" alt="免费使用就足够了"></p><h3 id="把系统ISO镜像解压"><a href="#把系统ISO镜像解压" class="headerlink" title="把系统ISO镜像解压"></a>把系统ISO镜像解压</h3><p><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331082936145.png"><br>添加镜像文件夹（不知道这里为啥不能直接添加ISO文件），然后就直接添加刚才解压的文件夹就好。<br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331083226964.png"><br>删除不想要的系统版本<br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331083435480.png"><br>双击加载所要精简的系统，或者选中后点击上面的加载。<br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331084158489.png"><br>按照需求作如下更改：</p><ul><li>移除广告、闹钟、反馈、获取帮助、消息、人脉、Skype、你的手机、移动计划、钱包服务、游戏周边等选项及功能</li><li>移除edge浏览器桌面快捷方式</li><li>移除小娜</li><li>关闭Windows Defender</li><li>移除更新中的edge浏览器自动安装</li><li>将“此电脑”、“控制面板”和“回收站”置于桌面</li><li>禁用人脉功能</li><li>自动显示文件后缀名</li></ul><h3 id="保存映像"><a href="#保存映像" class="headerlink" title="保存映像"></a>保存映像</h3><p>点击开始，勾选<strong>创建ISO</strong>并命名（忘了截图，略）<br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331095655129.png"></p><h2 id="虚拟机配置"><a href="#虚拟机配置" class="headerlink" title="虚拟机配置"></a>虚拟机配置</h2><p><img src="https://gitee.com/mxdon/img/raw/master/2020/20200318214154707.png" alt="创建虚拟机"><br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331110220928.png" alt="自定义虚拟机即将安装的系统"><br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331110233911.png" alt="选新的，因为我用的就是14版本的"><br>由于需要进入审核模式，所以这里务必要选择稍后安装操作系统。<br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331110324553.png" alt="稍后安装操作系统"><br><img src="https://gitee.com/mxdon/img/raw/master/2020/2020033111040233.png" alt="其他的64位，不知道别的选项会不会有影响，为了干净，就选其他的"><br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331110549626.png" alt="选择创建位置及名字"><br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331110747827.png" alt="配置处理器"><br>我的电脑有16G内存，所以这里分配了4G的虚拟机内存，仅供参考<br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331110855153.png" alt="配置内存，一般为物理机的一半"><br>封装系统不需要网络连接<br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331110958212.png" alt="不使用网络连接"><br>默认即可<br><img src="https://gitee.com/mxdon/img/raw/master/2020/2020033111101289.png" alt="IO控制器"><br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331111022307.png" alt="虚拟磁盘"><br>分配25G硬盘空间<br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331111102786.png" alt="分配25G空间"><br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331111126610.png" alt="默认命名，与之前设置的位置相同"><br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331111243332.png"></p><h2 id="使用虚拟机进入审核模式"><a href="#使用虚拟机进入审核模式" class="headerlink" title="使用虚拟机进入审核模式"></a>使用虚拟机进入审核模式</h2><p>在<strong>虚拟机-设置</strong>选择使用NTLITE精简的系统镜像，点击<strong>确定</strong><br><img src="https://gitee.com/mxdon/img/raw/master/2020/2020033111183925.png"><br>然后开启虚拟机，进入系统安装界面<br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331111936688.png"><br>接受条款，进入下一步<br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331112054150.png" alt="接受条款，进入下一步"><br>选择安装位置，点击下一步<br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331112124662.png" alt="默认安装位置"><br>帖子里说在如下界面按快捷键进入审核模式，但是我没有见到这个界面，随便按了两下就进来了。。。<br><img src="https://gitee.com/mxdon/img/raw/master/2020/2020033112070260.png" alt="远景的帖子"><br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200331120807806.png" alt="审核模式"></p><blockquote><p>后来经过多次尝试，除了上面的接受协议，等到界面不再让你选择的时候按快捷键就行，你品，你细品</p></blockquote><h2 id="集成软件"><a href="#集成软件" class="headerlink" title="集成软件"></a>集成软件</h2><p>选择<strong>取消</strong>退出系统准备工具，然后就可以进行软件的集成了。<br>这里我准备了之前总结过的各类软件，分别是：</p><ul><li>杀毒——火绒</li><li>卸载——geek</li><li>下载——fdm</li><li>清理——dism++</li><li>浏览器——谷歌浏览器（使用免安装版谷歌打包了一些网站和插件，看图标你懂的）<img src="https://gitee.com/mxdon/img/raw/master/2020/20200403153343565.png"></li><li>工具——everything</li><li>解压——bandzip</li></ul><p>然后将软件打包成镜像文件，在虚拟机设置中——将ISO镜像文件设置替换之前的系统镜像。</p><p><img src="https://gitee.com/mxdon/img/raw/master/2020/c782657a-5ba2-44e2-9fa6-94742ee7a6ca.png" alt="这个地方"></p><p>然后在虚拟机中进行安装即可。</p><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>使用软媒魔方进行部分设置。内容如下图所示：<br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200403235640406.png" alt="去除快捷方式上的箭头之类"><br>oem信息：设置为：mxdon<br>一些设置优化：<br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200404002249403.png" alt="设置oem厂商为Mxdon"><br>最后安装出的效果预想：<br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200404013123694-1586100907192.png" alt="好看嘛"></p><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><p>重启虚拟机，勾选“通用”，关机选项选择<strong>关机</strong><br><img src="https://gitee.com/mxdon/img/raw/master/2020/2020040423293748.png" alt="选关机比较稳"><br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200404232914246.png" alt="等待"><br>替换镜像为pe，打开电源事进入固件，调整cd-rom为第一启动选项<br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200404232529284.png" alt="替换pe系统镜像，这里使用技术员pe"><br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200404234452745.png" alt="防止热键没办法进BIOS然后直接进系统"><br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200404234632900.png" alt="调整引导顺序"><br>在pe种打开dism++<br><img src="https://gitee.com/mxdon/img/raw/master/2020/2020040423475695.png" alt="pe中的dism++"><br>根据大小选定“会话”<br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200404235021875.png" alt="选择系统盘中的系统进行清理"></p><p><strong>删除<code>Administrator</code>以及<code>defaultuser0</code>文件夹。</strong></p><p>打开运行，输入命令：</p><p><code>dism /capture-image /capturedir:D:\ /imagefile:E:\ABC.wim /name:&quot;Windows1909_Professional_By_Mxdon&quot; /compress:maximum</code></p><p>其中<code>D</code>是我的系统盘，<code>E</code>是<code>wim</code><br>文件导出的路径<code>Windows1909_Professional_By_Mxdon</code>是卷标，<code>ABC</code>是<code>wim</code>名，<code>maximum</code>代表最大压缩（微软的方式），默认是<code>fast</code>（如果还有更改需求的话可以用fast）<br>完成后<strong>关闭虚拟机</strong>，用<code>7zip</code>打开虚拟机文件，比如我的是<code>1909.vmdk</code>根据文件大小，可知我导出的<code>E:\ABC.wim</code>应该在<code>2.ntfs</code>下，相当于其中的E盘<br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200405004934184.png" alt="7zip打开虚拟机的vmdk文件"><br>打开<code>2.ntfs</code>，可以把<code>wim</code>文件导出<br><img src="https://gitee.com/mxdon/img/raw/master/2020/20200405005005202.png" alt="把wim文件解压出来"></p><p>重命名为<code>install.wim</code>这样得到一个<code>wim</code>文件就就算封装完成了。</p><h2 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h2><ul><li>wim文件貌似只能使用pe带的安装器安装，无法直接通过Windows平台安装。<strong>可以通过整合到ISO镜像中解决</strong></li><li>在将wim文件重新整合到ISO镜像中进行安装时，无法显示可用的映像。<strong>可用通过编辑source文件夹下EI.cfg文件解决</strong><br><img src="https://gitee.com/mxdon/img/raw/master/2020/9b0d00f0-5587-46c2-aa32-bcd505a15ad7.png"><br><img src="https://gitee.com/mxdon/img/raw/master/2020/a65d3f75-8a2f-480c-9ea2-fbaf34b1aa9a.png"></li><li>编辑EI.cfg文件没能解决问题，然后就不想试了，以后有机会再玩吧。</li><li>封装的系统安装后桌面不是预先设置的那样，手动放在桌面的快捷方式也没了。<strong>应该是在pe中清理的过头了</strong>不整了。（封装的软件在<code>C:\dir_install</code>文件夹下<del>里面还有Windows永久激活工具噢</del>，背景图片在<code>C:\windows\background.jpg</code>)</li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>NTLITE：<code>https://www.ntlite.com/download/</code></p><p>7zip:<code>https://sparanoid.com/lab/7z/</code></p><p>VMware:<code>http://www.xue51.com/search.asp?wd=VMware</code></p><p>软媒魔方：<code>https://mofang.ruanmei.com/</code></p><p><strong>系统中集成的软件</strong>：</p><p>火绒：<code>https://www.huorong.cn/person5.html</code></p><p>bandzip：<code>https://www.bandisoft.com/bandizip/</code></p><p>fdm：<code>https://www.freedownloadmanager.org/zh/</code></p><p>geek：<code>https://geekuninstaller.com/</code></p><p>everything：<code>https://www.voidtools.com/zh-cn/</code></p><p>绿色版谷歌浏览器：<code>https://pan.baidu.com/s/1sVQgF01_Ekqxg-657ugS7w</code><br>提取码：<code>qrgh</code></p><p><strong>最终封装出的<code>wim</code>文件</strong>：<code>https://pan.baidu.com/s/1ryWEjl4bqn23G3vVd55zLA </code><br>提取码：<code>04xc</code> </p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://www.bilibili.com/video/BV1ib411g7Sd?p=8">零基础学封装系统-Windows封装教程-定制属于你自己的系统-Windows 7篇</a><br><a href="https://www.bilibili.com/video/BV1Gb41117pt">最强Win10优化-NtLite作业，快来抄啊</a><br><a href="http://bbs.pcbeta.com/forum.php?mod=viewthread&tid=1757374&highlight=%EF%BF%BD%EF%BF%BD%D7%B0">Windows 10简易精简封装教程</a><br><a href="http://bbs.pcbeta.com/viewthread-1756381-1-1.html">16353自制64位中国版五合一镜像 附教程</a><br><a href="https://blog.csdn.net/weixin_43707156/article/details/99223157">最新WIN10系统封装教程2019系列</a><br><a href="https://www.cnblogs.com/jairkong/p/3738387.html">合并Windows系统镜像教程</a><br><a href="https://wenku.baidu.com/view/c57dcab783c4bb4cf6ecd152.html">win7系统封装wim教程</a><br><a href="https://www.52pojie.cn/thread-1125559-1-1.html">[Windows] 【浏览器】谷歌浏览器绿色免安装版，可装非C盘</a></p><h2 id="往期回顾"><a href="#往期回顾" class="headerlink" title="往期回顾"></a>往期回顾</h2><ul><li><a href="http://mp.weixin.qq.com/s?__biz=MzI4NDkzNTA3NQ==&mid=2247485346&idx=1&sn=639d4dd4bd8a1492fdcdd91144506fd5&chksm=ebf2916edc8518788b864d91de200bc06e48c8f9a54b3ff1e0282df5b768f76f2f888b24b51c&scene=21#wechat_redirect">电脑必备软件清单5——清理类</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI4NDkzNTA3NQ==&mid=2247485336&idx=1&sn=01a7a8141dd3e18442a6bd39627f7942&chksm=ebf29154dc85184296521ad90569d6769eed0b892acc5b5c291c9e2f134ee6264742a9d8f0e8&scene=21#wechat_redirect">电脑必备软件清单4——杀毒类</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI4NDkzNTA3NQ==&mid=2247485304&idx=1&sn=5d04fd640b2eaebbcf2be83385908a08&chksm=ebf291b4dc8518a28784a429ac7fda02dbd11791b05abe238a1f8866b0f70698ca152853d309&scene=21#wechat_redirect">电脑必备软件清单3——下载类</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI4NDkzNTA3NQ==&mid=2247485289&idx=2&sn=50e6a793257082ce4e2130492159f5a3&chksm=ebf291a5dc8518b345fe189aadc5ae55ff94799b5ee53384e1a9c94bdbef45a5a9f51194f332&scene=21#wechat_redirect">电脑必备软件清单2——工具类</a></li><li><a href="http://mp.weixin.qq.com/s?__biz=MzI4NDkzNTA3NQ==&mid=2247485254&idx=1&sn=942e25584d1fb75198fbf39b1462fddb&chksm=ebf2918adc85189c0345f1fb7a5147130bdf76f4245b7a61859147838484490931dec13aeed5&scene=21#wechat_redirect">电脑必备软件清单1——卸载类</a></li></ul><h1 id="最后，点个关注不迷路"><a href="#最后，点个关注不迷路" class="headerlink" title="最后，点个关注不迷路"></a>最后，点个关注不迷路</h1><img src="https://gitee.com/mxdon/img/raw/master/2020/640" alt="null" style="zoom: 48%;" /><img src="https://gitee.com/mxdon/img/raw/master/2020/00D0202D97CDF9F318D419116E03C5FA.jpg" alt="img" style="zoom: 33%;" />]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/12/05/%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E5%86%99%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%B8%80/"/>
      <url>/2021/12/05/%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E5%86%99%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<h1 id="自己动手写操作系统一"><a href="#自己动手写操作系统一" class="headerlink" title="自己动手写操作系统一"></a>自己动手写操作系统一</h1><blockquote><p>参考余渊老师写的《自己动手写操作系统》</p></blockquote><span id="more"></span><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="NASM"><a href="#NASM" class="headerlink" title="NASM"></a>NASM</h3><p>官网：<code>https://nasm.us/</code></p><p>有安装版，也有免安装版，以免安装版为例，直接下载压缩包，然后解压到文件夹中就可以了。<br><img src="D:\github\Blog\source_posts\自己动手写操作系统一\b45a3dd4-16c8-4599-a8e7-3d2f291d059a.png" alt="官网"></p><p><img src="D:\github\Blog\source_posts\自己动手写操作系统一\39d37f2a-de26-4ff3-bbbb-16dd3bdf0c7f.png" alt="解压"><br>和网上的很多教程有些区别了，在<code>https://www.cnblogs.com/777777-716/p/5003964.html</code>这篇博客中，nasm的使用需要打开一个bat文件，但是我们的压缩包中并没有这个文件，所以就考虑是环境的问题<br><img src="D:\github\Blog\source_posts\自己动手写操作系统一\b1d8bce2-1a07-411d-9015-05bc43f3185b.png"><br>直接使用的话需要在当前文件夹下打开cmd，或者从cmd进入到当前文件夹。</p><p><img src="D:\github\Blog\source_posts\自己动手写操作系统一\226c58d1-ad51-44b4-8ade-d9cfe9f6007e.png" alt="在文件路径的地方输入cmd并回车"></p><p><img src="D:\github\Blog\source_posts\自己动手写操作系统一\f1cc4066-78ca-4100-82bc-c0dd2e70e149.png" alt="输入nasm有指令的相关提示"><br>如果在任何其他的路径下，都是无法找到命令。</p><p><img src="D:\github\Blog\source_posts\自己动手写操作系统一\f795740a-a237-4f91-8feb-f73a07e41f60.png" alt="没有nasm这个命令"><br>这个问题可以通过环境变量的配置来解决。</p><p><img src="D:\github\Blog\source_posts\自己动手写操作系统一\baedb371-215d-420c-a0c7-06604030c194.png" alt="找到环境变量并配置path"></p><p><img src="D:\github\Blog\source_posts\自己动手写操作系统一\57aed9df-2d64-4693-b961-71f9c37d5021.png" alt="添加nasm的路径"></p><p><img src="D:\github\Blog\source_posts\自己动手写操作系统一\e635bf77-850e-49d2-9f59-109197a11d5f.png" alt="这时无论在什么位置都可以使用nasm了"></p><h3 id="VirtualBox"><a href="#VirtualBox" class="headerlink" title="VirtualBox"></a>VirtualBox</h3><p>关于VirtualBox添加软盘启动，一开始没能找到，然后也是参考了这篇的博客，同上（<code>https://www.cnblogs.com/777777-716/p/5003964.html</code>）。稍微具体说一下吧。</p><ul><li>首先是新建一个空的虚拟机<br>类型和版本都选择其他就好了，文件夹自己建一个，找起来方便。<br><img src="D:\github\Blog\source_posts\自己动手写操作系统一\7dd554ad-86c2-495b-9e8f-a4f41c5f9a8b.png"></li><li>按照书中的例子是32M内存足够<br><img src="D:\github\Blog\source_posts\自己动手写操作系统一\a525f624-5db4-4f77-8a8b-1754465e5317.png" alt="按照书中的例子是32M内存足够"></li><li>书中说创建一个虚拟硬盘也无妨<br><img src="D:\github\Blog\source_posts\自己动手写操作系统一\47b8bea1-5692-4f2f-81c5-e3363246e0aa.png" alt="书中说创建一个虚拟硬盘也无妨"></li><li>书中没说，所以我按字面意思选择了虚拟硬盘<br><img src="D:\github\Blog\source_posts\自己动手写操作系统一\ce13e7e8-8981-4735-b0d3-bae0c88d70ef.png" alt="书中没说，所以我按字面意思选择了虚拟硬盘"></li><li>默认选择了<br><img src="D:\github\Blog\source_posts\自己动手写操作系统一\dc9b36f2-e98a-426d-ae72-f81ed7e56d36.png" alt="默认选择了"></li><li>1G就够了<br><img src="D:\github\Blog\source_posts\自己动手写操作系统一\09cddf2c-ebe2-48ed-a482-5300345c56af.png" alt="1G就够了"></li></ul><h4 id="添加软盘启动"><a href="#添加软盘启动" class="headerlink" title="添加软盘启动"></a>添加软盘启动</h4><ul><li>设置-存储-添加软盘控制器<br><img src="D:\github\Blog\source_posts\自己动手写操作系统一\83bb3a3f-14be-440b-98c8-500f352c66aa.png"></li><li>添加新软驱到控制器-选择磁盘<br><img src="D:\github\Blog\source_posts\自己动手写操作系统一\0b72fddf-7584-47cc-bc82-789cf745a1d6.png"></li><li>注册-找到生成的img文件，打开即可<br><img src="D:\github\Blog\source_posts\自己动手写操作系统一\73f3050e-91e5-4788-884c-2222b472827c.png"></li><li>选择OK<br><img src="D:\github\Blog\source_posts\自己动手写操作系统一\7e052566-5575-4784-90fe-5471554bfeee.png"></li></ul><h3 id="VMware"><a href="#VMware" class="headerlink" title="VMware"></a>VMware</h3><p>现在的功能都很完善了，VMware也可以很好的支持。</p><ul><li>首先创建空的虚拟机，过程基本同上。添加软盘启动时，在<code>虚拟机-设置-硬件-添加-软盘驱动器</code>添加即可</li></ul><p><img src="D:\github\Blog\source_posts\自己动手写操作系统一\b2d7b07c-8870-4d78-bc11-ae9c66ae9fa9.png"></p><ul><li>添加生成的img文件即可<br><img src="D:\github\Blog\source_posts\自己动手写操作系统一\6ae1e037-1123-425a-a665-451595f78b39.png"></li></ul><h2 id="开启虚拟机"><a href="#开启虚拟机" class="headerlink" title="开启虚拟机"></a>开启虚拟机</h2><p><img src="D:\github\Blog\source_posts\自己动手写操作系统一\5313ead0-114d-4a05-90ce-79f74516433f.png" alt="VirtualBox启动界面"></p><p><img src="D:\github\Blog\source_posts\自己动手写操作系统一\9beecd0f-2f40-4d33-bd4d-9bfe4e6aca5d.png" alt="VMware启动界面"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="Floppy"><a href="#Floppy" class="headerlink" title="Floppy"></a>Floppy</h3><p>包括其他的一些必要工具，在余渊老师的书中所附带的光盘文件都有提供。这里不再上传，有需要请留言即可。</p><p><img src="D:\github\Blog\source_posts\自己动手写操作系统一\97a22458-b012-4c68-993a-fd74f2c2edab.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/12/05/%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E5%86%99%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%BA%8C/"/>
      <url>/2021/12/05/%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E5%86%99%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="自己动手写操作系统-1"><a href="#自己动手写操作系统-1" class="headerlink" title="自己动手写操作系统 1"></a>自己动手写操作系统 1</h1><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">org07c00h; 告诉编译器程序加载到7c00处</span><br><span class="line">movax, cs</span><br><span class="line">movds, ax</span><br><span class="line">moves, ax</span><br><span class="line">callDispStr; 调用显示字符串例程</span><br><span class="line">jmp$; 无限循环</span><br><span class="line">DispStr:</span><br><span class="line">movax, BootMessage</span><br><span class="line">movbp, ax; ES:BP = 串地址</span><br><span class="line">movcx, 16; CX = 串长度</span><br><span class="line">movax, 01301h; AH = 13,  AL = 01h</span><br><span class="line">movbx, 000ch; 页号为0(BH = 0) 黑底红字(BL = 0Ch,高亮)</span><br><span class="line">movdl, 0</span><br><span class="line">int10h; 10h 号中断</span><br><span class="line">ret</span><br><span class="line">BootMessage:db&quot;Hello, OS world!&quot;</span><br><span class="line">times 510-($-$$)db0; 填充剩下的空间，使生成的二进制代码恰好为512字节</span><br><span class="line">dw 0xaa55; 结束标志</span><br></pre></td></tr></table></figure><p>上面是书中给的代码，注释写的也是很详细了。然后，这玩意叫汇编，稍微懂一点应该能大致看得懂。等我复习汇编的时候再分享一波学习笔记也可。</p><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>用NASM编译</p><ul><li>打开cmd，考虑文件的整齐划一，可以在工作目录打开。<br>好神奇，在生成.bin文件的时候突然报毒了。<br><img src="D:\github\Blog\source_posts\自己动手写操作系统二\4b3b67a5-1148-47c9-867d-45ed0f230e52.png"><br>关闭杀毒再来一次，可以了。<br><img src="D:\github\Blog\source_posts\自己动手写操作系统二\4841e3a2-9fa1-45b0-a4e6-8c167fffaae7.png"><h2 id="写入软盘"><a href="#写入软盘" class="headerlink" title="写入软盘"></a>写入软盘</h2>这要用到Floppy这个工具，双击打开，选择<code>Write File to Image</code><br><img src="D:\github\Blog\source_posts\自己动手写操作系统二\cd2ec1ec-a1f5-471c-b4c8-172b7325852a.png"><br>文字写的很清楚，将文件写入image文件中，所以提前应该创建一个img文件。<br><img src="D:\github\Blog\source_posts\自己动手写操作系统二\179ad843-66aa-4d76-a8ce-b256e5d9d767.png"><br>选择.bin文件<br><img src="D:\github\Blog\source_posts\自己动手写操作系统二\ffc8e81b-c86e-40c7-8d57-e7c97fc976a6.png"><br>选择要写入的img文件<br><img src="D:\github\Blog\source_posts\自己动手写操作系统二\62b178d7-377b-4dbb-8dc7-1e1e5d2ae5a2.png"></li></ul><p>然后写入即可。写入成功，又报毒了，所以我觉得把WindowsDefender给关了……<br><img src="D:\github\Blog\source_posts\自己动手写操作系统二\1df297c5-71f1-42ca-8e81-18642d38c2c9.png"></p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>使用VirtualBox，运行成功。<br><img src="D:\github\Blog\source_posts\自己动手写操作系统二\38071146-facd-4e8b-b99b-1de0c55552ac.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/12/05/%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%96%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5%E7%9A%84%E6%A0%87%E9%A2%98/"/>
      <url>/2021/12/05/%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%96%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5%E7%9A%84%E6%A0%87%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="自动获取参考链接的标题"><a href="#自动获取参考链接的标题" class="headerlink" title="自动获取参考链接的标题"></a>自动获取参考链接的标题</h1><blockquote><p>众所周知，我也是一个<del>托更的</del>自媒体的创作者</p></blockquote><p>写的文章经常需要提及一些参考文章，大多数来源于互联网，如下图：</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210112223039400.png" alt="上上次文章的参考文献"></p><p>看着感觉还行吧，但是写的时候真的是有点头大，一遍一遍的复制链接，再一遍一遍的对应链接去复制标题，十分的不银杏～</p><p>于是懒人总算想起来写一个爬虫脚本直接获取不就完事了吗？</p><p>说干就干：</p><p>啊完成了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> urllib3</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) <span class="comment"># 防止ssl请求报错</span></span><br><span class="line"></span><br><span class="line">heads = &#123;<span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">src = <span class="built_in">open</span>(<span class="string">&quot;link2md.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">des = <span class="built_in">open</span>(<span class="string">&quot;res.txt&quot;</span>,<span class="string">&quot;w&quot;</span>)</span><br><span class="line"></span><br><span class="line">lines = src.readlines()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">    </span><br><span class="line">    url = line.strip(<span class="string">&quot;\n&quot;</span>).replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>) <span class="comment"># 把文件里的链接去除一些不必要的符号</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        res = requests.get(url,timeout=<span class="number">30</span>,headers=heads,verify=<span class="literal">False</span>)</span><br><span class="line">        res.encoding = <span class="string">&#x27;UTF-8&#x27;</span> <span class="comment"># 解码</span></span><br><span class="line">        content = res.text</span><br><span class="line">        soup = BeautifulSoup(content,<span class="string">&#x27;html.parser&#x27;</span>) <span class="comment"># 获取网页</span></span><br><span class="line"></span><br><span class="line">        target = soup.find(<span class="string">&#x27;title&#x27;</span>) <span class="comment"># 获取标题</span></span><br><span class="line">        result = <span class="string">&quot;[&quot;</span>+target.text+<span class="string">&quot;](&quot;</span>+url+<span class="string">&quot;)\n&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[\033[32m%s\033[0m](\033[34m%s\033[0m)&quot;</span> % (target.text,url) ) <span class="comment"># 彩色打印</span></span><br><span class="line">        des.write(result)</span><br><span class="line">        <span class="comment">#time.sleep(random.random()*3)</span></span><br><span class="line">        <span class="comment">#time.sleep(0.1)   # 如果爬的太快，可以定义一下爬取时间</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[\033[31m############   Something Error  #############\033[0m](\033[31m%s\033[0m)&quot;</span>% (url)) <span class="comment"># 彩色打印</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">src.close()</span><br><span class="line">des.close()</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li><p>把参考链接写入到<code>link2md.txt</code>的文件中</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210125234247025.png" alt="参考链接"></p></li><li><p>运行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 link2md.py</span><br></pre></td></tr></table></figure></li><li><p>完成</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210125234627855.png" alt="控制台打印输出"></p><p>文件中也有写入正确的结果：</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210126000237981.png" alt="写入文件的结果"></p></li></ol><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>本来还想封装成跨平台的小软件，算了算了，凑合用吧～</p><blockquote><p>如果有同学想封装，再可视化一下，记得发我一份谢谢～</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/12/05/%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
      <url>/2021/12/05/%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="远程控制（这下够用了吧）"><a href="#远程控制（这下够用了吧）" class="headerlink" title="远程控制（这下够用了吧）"></a>远程控制（这下够用了吧）</h1><h2 id="三种方法"><a href="#三种方法" class="headerlink" title="三种方法"></a>三种方法</h2><span id="more"></span><h3 id="方法1：使用Remote-Desktop（局域网）"><a href="#方法1：使用Remote-Desktop（局域网）" class="headerlink" title="方法1：使用Remote Desktop（局域网）"></a>方法1：使用Remote Desktop（局域网）</h3><p>这种方法是微软发布的跨平台项目。<br><img src="D:\github\Blog\source_posts\远程控制\3d68cea7-c3c0-4cd5-9c89-d3eeb06de6c7.png"></p><p>基于Windows系统的话，只需要下载手机端即可：<br><img src="D:\github\Blog\source_posts\远程控制\b50f6146-159a-4148-8b9b-09a4f9ed7fcc.png"><br>然后打开软件，对软件进行许可：<br><img src="D:\github\Blog\source_posts\远程控制\659336a1-ea4a-4dc3-b5b4-5f9213a28bfa.png"><br>使用也很简单，点击右上角的“+”，选择Desktop<br><img src="D:\github\Blog\source_posts\远程控制\4e56bcec-1931-4a05-992a-bf016e2db458.png"><br>根据提示，我们需要知道电脑的hostname或者IP地址，这里介绍一下IP地址的验证方式<br><img src="D:\github\Blog\source_posts\远程控制\523e337a-91ab-4b84-b9ef-f43b2b1d887c.png"><br>打开命令行窗口，输入<code>ipconfig</code>查看ipv4的信息（以太网的话就看以太网，WiFi就看WLAN）<br><img src="D:\github\Blog\source_posts\远程控制\8aea7791-8338-4339-a798-3ee552a91ce2.png"><br>开启远程桌面的功能，在设置-系统-远程桌面中打开权限<br><img src="D:\github\Blog\source_posts\远程控制\ea01f848-6f4d-4285-8176-ddef8e7c4f7e.png"><br>在添加用户时，本地账户已经默认添加，如有需要，还可以自行添加<br><img src="D:\github\Blog\source_posts\远程控制\1a1e3200-3f45-46ec-ac71-3e2bc5eb096e.png"><br>在手机端输入相关信息，然后保存<br><img src="D:\github\Blog\source_posts\远程控制\abfc5409-66a1-43bf-adb8-d83abb968eb5.png"><br>接着会自动返回桌面，点击图标即可开始连接<br><img src="D:\github\Blog\source_posts\远程控制\0c9261ad-f423-46c8-baca-c1a707d27e56.png"><br>点击connect<br><img src="D:\github\Blog\source_posts\远程控制\da44812c-1643-4b13-b218-14d823b1e607.png"><br>然后会要求输入本地账户和密码，输入后再次点击connect<br><img src="D:\github\Blog\source_posts\远程控制\2b9bbdb8-a4e2-4680-9d7c-1cadd585ae7d.png"><br>手机上的电脑显示如下，此时远程连接成功，电脑端会自动锁屏<br><img src="D:\github\Blog\source_posts\远程控制\ce6a9ca8-3144-4d42-b15b-9d5f6ebf59cf.png"><br>手机端控制电脑访问学校官网截图如下：<br><img src="D:\github\Blog\source_posts\远程控制\0b2f13f3-6591-47d8-b930-5e4318bf0629.png"></p><h3 id="方法2：使用anydesk（非局域网）"><a href="#方法2：使用anydesk（非局域网）" class="headerlink" title="方法2：使用anydesk（非局域网）"></a>方法2：使用anydesk（非局域网）</h3><p>anydesk是teamviewer的孪生弟弟，软件小巧，可跨局域网、跨平台使用<br>首先是电脑端：<br><img src="D:\github\Blog\source_posts\远程控制\669aa7b0-d4e3-4d02-bf7d-c0e21d1bc0e4.png"><br>打开后可以在本机安装，也可以免安装使用：<br><img src="D:\github\Blog\source_posts\远程控制\f6b396e1-7364-42f3-9003-88ab7b6f6d3d.png"><br>手机端也可以在官网下载，传送到手机端，也可以在谷歌商店直接下载：<br><img src="D:\github\Blog\source_posts\远程控制\142da3e6-2d9a-41cf-ac68-4e67773bc0df.png"><br>手机端打开anydesk，提示需要安装插件，选择确定：<br><img src="D:\github\Blog\source_posts\远程控制\5bc79fad-aee3-4356-aaa9-0263ea65064e.png"><br>提示下载apk文件，下载安装即可：<br><img src="D:\github\Blog\source_posts\远程控制\add8f0f8-f984-4c67-af4a-91c9d815588c.png"><br>然后跳过教程<br><img src="D:\github\Blog\source_posts\远程控制\a8d30856-f724-4248-872e-58223e5ff745.png"><br>输入电脑端的连接地址：<br><img src="D:\github\Blog\source_posts\远程控制\f3c7f035-83f0-4a01-84f1-5e455ea1c72b.png"><br>点击连接图标<br><img src="D:\github\Blog\source_posts\远程控制\de127af3-8282-4a3d-8d9e-8d99de538faa.png"><br>电脑端接受连接请求：<br><img src="D:\github\Blog\source_posts\远程控制\6b408be3-44c0-41f9-80ce-a612a9f441ae.png"><br>随意点击，跳过提示<br><img src="D:\github\Blog\source_posts\远程控制\a0ce532a-667d-495a-b366-1d395e5df9bd.png"><br>手机端控制电脑访问学校官网截图如下：<br><img src="D:\github\Blog\source_posts\远程控制\d3e27426-dd87-4133-966c-f0f03565b520.png"></p><h3 id="方法3：使用向日葵（非局域网）"><a href="#方法3：使用向日葵（非局域网）" class="headerlink" title="方法3：使用向日葵（非局域网）"></a>方法3：使用向日葵（非局域网）</h3><p>电脑端下载向日葵：<br><img src="D:\github\Blog\source_posts\远程控制\ff215c1b-2ce4-4c96-b693-dcc3578fbe5b.png"><br>安装并打开：<br><img src="D:\github\Blog\source_posts\远程控制\e7c08782-ecd4-4efe-b250-eb2672740c4e.png"><br>手机端下载向日葵：<br><img src="D:\github\Blog\source_posts\远程控制\7384ed99-92f8-4b96-b20d-093d6fad5d24.png"><br>打开软件，手机端要求必须要账号登录：<br><img src="D:\github\Blog\source_posts\远程控制\de13111b-4e9d-4c68-b06f-6e94710bd94f.png"><br>登陆后点击“发现-远程协助”<br><img src="D:\github\Blog\source_posts\远程控制\12859c62-af59-4964-a1a3-581fe4ba91ca.png"><br>输入识别码和验证码，即可进行远程连接：<br><img src="D:\github\Blog\source_posts\远程控制\68abe103-3ef2-43cc-a516-54b6be4eeeb1.png"><br>手机端控制电脑访问学校官网截图如下：<br><img src="D:\github\Blog\source_posts\远程控制\ea9e0c6e-f42a-4df7-88a2-87975434758d.png"></p><h3 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h3><ul><li>比如应用宝，在管理-连接电脑可以实现，需要在电脑端下载应用宝（在商店搜索远程桌面有很多软件可以用）<br><img src="D:\github\Blog\source_posts\远程控制\26d50053-4366-492d-906c-64e31690002b.png"></li><li>谷歌应用商店也有远程桌面的功能<br><img src="D:\github\Blog\source_posts\远程控制\98ad359c-78a6-4400-acf8-0740847d1f3e.png"></li><li>极端一些也可以在手机上装个模拟Linux的环境，打开ssh功能，即可通过ssh连接电脑端，这里不再演示</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/12/05/%E6%97%A0%E5%BC%80%E5%8F%91%E6%9D%BF%E5%A6%82%E4%BD%95%E5%BC%80%E5%8F%91linux%E7%B3%BB%E7%BB%9F%E5%86%85%E6%A0%B8/"/>
      <url>/2021/12/05/%E6%97%A0%E5%BC%80%E5%8F%91%E6%9D%BF%E5%A6%82%E4%BD%95%E5%BC%80%E5%8F%91linux%E7%B3%BB%E7%BB%9F%E5%86%85%E6%A0%B8/</url>
      
        <content type="html"><![CDATA[<h1 id="龙芯杯无开发板如何开发和调试linux"><a href="#龙芯杯无开发板如何开发和调试linux" class="headerlink" title="龙芯杯无开发板如何开发和调试linux"></a>龙芯杯无开发板如何开发和调试linux</h1><p>[toc]</p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><blockquote><p>因为龙芯杯的<code>cpu</code>是<code>32</code>位的，具体来说是基于<code>GS232</code>的，恰好给的<code>pmon</code>引导文件是用于<code>ls1b</code>的，<code>ls1b</code>的核也是<code>GS232</code>的，所以就想到可以直接基于<code>ls1b</code>的虚拟机来开发操作系统，这样就可以加快操作系统的开发周期，而不需要依托于上板才能看出操作系统存在的问题(大多数)。</p></blockquote><h2 id="Qemu搭建"><a href="#Qemu搭建" class="headerlink" title="Qemu搭建"></a>Qemu搭建</h2><ol><li><p>虚拟机采用qemu，因为qemu支持ls1b，pmon的话可以直接使用发布包里面给的，也可以使用龙芯开源的ls1b的pmon，后者开机有图形显示，仅此而已，都是够用的。</p><ul><li><p>首先是下载和安装<code>qemu</code>，从官网和清华源之类的地方下载是只有很少龙芯机器支持的，这里用<code>https://gitee.com/martinqiao/qemu.git</code></p><p>配置和编译如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir build4mips</span><br><span class="line"><span class="built_in">cd</span> build4mips</span><br><span class="line">../configure --target-list=mipsel-softmmu --disable-werror</span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>其中<code>--target-list</code>后面的选项，在此调试需求下，必须的是<code>mipsel-softmmu</code>，有更多兴趣的可以加上<code>mips64el-softmmu</code>，<code>mips64el-linux-user</code>，<code>mipsel-linux-user</code>等，自行了解即可。其中带有<code>softmmu</code>的选项是系统级虚拟机，<code>linux-user</code>为用户级虚拟机。</p><ul><li><code>../configure</code>的时候如果出现<code>ERROR</code>报错，缺少依赖的话，用<code>apt-cache search 依赖</code>，然后再安装即可，如果不报<code>ERROR</code>的错，应该就可以直接<code>make</code></li></ul></li></ul></li></ol><h2 id="利用qemu测试pmon"><a href="#利用qemu测试pmon" class="headerlink" title="利用qemu测试pmon"></a>利用qemu测试pmon</h2><ol start="2"><li>在真实的机器上是绕不开BootLoader这一层的，在龙芯里也就是PMON，在Qemu中可以带着PMON一起运行Linux。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-5.2.0/build4mips/mipsel-softmmu/qemu-system-mipsel -M ls1b -serial stdio -m 2048 -bios ../loongson/pmon/zloader.ls1b/gzrom.bin</span><br></pre></td></tr></table></figure></li></ol><h2 id="利用Qemu和Pmon测试操作系统"><a href="#利用Qemu和Pmon测试操作系统" class="headerlink" title="利用Qemu和Pmon测试操作系统"></a>利用Qemu和Pmon测试操作系统</h2><ol start="3"><li><p>利用<code>qemu</code>调试操作系统</p><p>做系统开发的话嘛，写系统大家就各自加油吧，太难讲了（等以后的同学完善这一块吧），然后调试就是用这种方式。首先要准备一个写好的内核。就是一般编译出来的<code>vmlinux</code>文件（啊我好罗嗦）</p><blockquote><p>由于自己写的，还不行，所以就用源码编译一份，用作演示</p></blockquote></li></ol><h3 id="提供linux内核"><a href="#提供linux内核" class="headerlink" title="提供linux内核"></a>提供linux内核</h3><p>   qemu支持带pmon引导操作系统，当然更广为人知的是直接引导操作系统，然而直接引导一个操作系统可能不止需要一个操作系统的内核，还需要<code>模拟内存的磁盘文件</code>，<code>设备树文件</code>等，而且按照龙芯杯的需求，只需要一个内核文件即可，所以我们只做一个操作系统的内核即可（但是没有根文件系统就没法交互）。</p><p>   此处参考最后文末最后一篇文章</p><ol><li><p>获取源码<code>http://ftp.loongnix.org/embedd/ls1b/bootloader/</code></p></li><li><p>在<code>http://ftp.loongnix.org/embed/ls1b/boot/</code> 下载<code>ramdisk.tar.gz</code>，并将其解压到<code>/mnt/ramdisk1</code> 目录中（解决某种报错，遇到就知道了）</p></li><li><p><code>cp config.ls1b .config</code>修改内核配置</p></li><li><p><code>make vmlinux ARCH=mips</code>编译内核</p></li><li><p><code>mipsel-linux-strip vmlinux</code>精简内核</p></li></ol><blockquote><p>依赖问题自行解决……</p></blockquote><p>这时在源码目录下就出现了<code>vmlinux</code>文件，也就可以使用了。</p><h3 id="搭建tftp服务器"><a href="#搭建tftp服务器" class="headerlink" title="搭建tftp服务器"></a>搭建tftp服务器</h3><p>大赛发布包有提供这样的文件教程，但是是<code>windows</code>的，可能在<code>windows</code>下大家更好操作，<del>但是我已经好久没碰<code>windows</code>了……</del> 所以<code>linux</code>的，凑合看吧……</p><ol><li>安装<code>tftp-server</code>，在不同的发行版，包的名字可能不太一样，自己查一下吧（龙芯的操作系统上叫<code>tftp-server</code>，我在网上看别的都是<code>tftpd</code>大家自行斟酌）</li><li>开启tftp服务，然后查看服务，这一点貌似都是一样的：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start tftp.service</span><br><span class="line">systemctl status tftp.service</span><br></pre></td></tr></table></figure>其实目的是查看tftp的配置文件和根目录：<img src="https://static01.imgkr.com/temp/40c7fb44c06444af8b1f1976ef13871d.png"><br>图中<code>1</code>是tftp的配置文件所在，<code>2</code>是tftp的根目录，打开配置文件，修改根目录为自己想要的地方就行</li></ol><h3 id="qemu-pmon-linux"><a href="#qemu-pmon-linux" class="headerlink" title="qemu+pmon+linux"></a>qemu+pmon+linux</h3><p>OK，准备结束，正文开始，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">build4mips/mipsel-softmmu/qemu-system-mipsel -M ls1b -bios ../gzrom_ls1b.bin -serial stdio -m 2048 -smp 1 -net nic -nic user,net=10.20.4.0/24,host=10.20.4.16,tftp=/home/loongson/chip/</span><br></pre></td></tr></table></figure><p>写成了代码格式，不知道大家能不能看完整吼吼吼就这样先～</p><p>稍作说明，<code>pmon</code>的加载和之前测试<code>pmon</code>的过程一样，区别在于增加了选项：<br><code>-net nic -nic user,net=10.20.4.0/24,host=10.20.4.16,tftp=/home/loongson/chip/</code></p><p>其中<code>-net nic -nic user</code>是增加了用户级网络配置，至于桥配置、tap配置等内容自行了解，我也不会。</p><p>后面的<code>net=10.20.4.0/24</code>是配置<code>qemu</code>的网络，其实不配这个好像也行，为什么说不配也行呢，因为<code>pmon</code>里还要重新配置，跟这个没关系，但是我不配就会失败……不明白，成功就行吧先</p><p><code>host=10.20.4.16</code>是我的主机<code>ip</code>（内部机密，切勿泄漏）</p><p><code>tftp=/home/loongson/chip/</code>是<code>tftp</code>的根目录，这个不配不行，不配的话在<code>pmon</code>里<code>load</code>的时候会显示没有权限。</p><p>经过上述的配置，进入到<code>pmon</code>的界面，跟之前介绍的<code>pmon</code>测试一样，但是这时，我们配置<code>pmon</code>的<code>ip</code>就可以和主机通信了：</p><ol><li><p>首先查看设备列表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">devls</span><br></pre></td></tr></table></figure><p>选择带<code>net</code>字样的设备名词，我这里是<code>syn0</code>（不同设备好像不一样？我还没试过家里的电脑hhhh大家试一下）</p></li><li><p>开启网络设备</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig syn0 up</span><br></pre></td></tr></table></figure></li><li><p>配置网络，这里当然要配置和主机<code>ip</code>同网段的地址，但是神奇的是，必须要把最后一位置<code>0</code>,比如我的<code>ip</code>是<code>10.20.4.16</code>,我给<code>pmon</code>配置<code>10.20.4.11</code>就不行，但是配置<code>10.20.4.0</code>就可以。</p><p>还记得上面的命令是<code>net=10.20.4.0/24</code>，这里哪怕是改成<code>net=10.20.4.11/24</code>，在<code>pmon</code>里配置网络时也还是只有<code>10.20.4.0</code>可以，就很神奇。</p><p>配置网络命令为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig syn0 10.20.4.0 netmask 255.255.254.0</span><br></pre></td></tr></table></figure><p>完整图示如下：<br><img src="https://static01.imgkr.com/temp/6640dee8b412406c955afaa9eb1790da.png"><br>其中<code>1</code>是开启网卡，<code>2</code>是配置网络，<code>3</code>是查看网络状态。</p></li><li><p><code>load</code>内核<br> 首先我是把前面准备的内核文件<code>vmlinux</code>放在了<code>/home/loongson/chip/</code>目录下，也就是<code>tftp</code>服务器的根目录，所以<code>load</code>的时候如下即可：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load tftp://10.20.4.16/vmlinux</span><br></pre></td></tr></table></figure><p> 如下图，<code>load</code>成功<br> <img src="https://static01.imgkr.com/temp/972915aa819a43748bdffa6c3e7eba5b.png"></p></li><li><p>进入<code>linux</code>系统<br> 大赛的发布包上一点和这一点都说的比较清楚了：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g console=ttyS0,115200 rdinit=sbin/init</span><br></pre></td></tr></table></figure><p>其中<code>115200</code>是波特率，也就是<code>GS232</code>的串口波特率，咱们做系统调试的就不用改这个了。</p><p> <img src="https://static01.imgkr.com/temp/ef64b08f4efd4c91992269f5dcb103ff.png"><br> 看到<code>32</code>个寄存器的初始值了吧，跑了一大堆日志，然后就进入系统了：</p><p> <img src="https://static01.imgkr.com/temp/9d979c7416e5425e978fff38955cc105.png"><br> 完成。</p></li></ol><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p>其实上面说的都是测试，调试的话是依赖于<code>qemu</code>的<code>gdb</code>支持，可以按行调试代码！不过上述测试就够我们开发了系统了。调试也就是锦上添花，如虎添翼，<del>伤口撒盐</del></p><p><strong>那么如何调试呢?</strong></p><p>首先要会一点点<code>gdb</code>，本文不介绍。</p><p>一般的调试，在<code>qemu</code>命令行添加<code>-g 1234</code>之类的选项，就可以在另一个终端打开<code>gdb</code>，然后输入<code>target remote :1234</code>就可以调试了</p><p>调试系统内核，参考<code>https://www.cnblogs.com/powerrailgun/p/12161295.html</code>：</p><p>命令如下：</p><p><code> build4mips/mipsel-softmmu/qemu-system-mipsel -M ls1b -bios ../gzrom_ls1b.bin   -serial stdio -m 4096  -net nic -nic user,net=10.20.4.0/24,host=10.20.4.16,tftp=/home/loongson/chip/ -smp 1 -S -gdb tcp::1235</code></p><p>主要看最后的内容，<code>tcp::1235</code>和<code>-g 1235</code>是类似的。然后打开<code>gdb</code>调试，然后使用<code>ni</code>和<code>si</code>进行汇编级别的单步调试。</p><h2 id="其他内容"><a href="#其他内容" class="headerlink" title="其他内容"></a>其他内容</h2><p>网上有介绍别的可以调试内核的，我觉得吧，也挺麻烦的，而且线上的速度也不如本地调试快（其实<code>qemu</code>也用到了相关的子模块）。有兴趣可以参考：<br><a href="https://www.oschina.net/news/108450/linux-lab-0-2-rc1-released">https://www.oschina.net/news/108450/linux-lab-0-2-rc1-released</a></p><p>还有内核的构建之类的，参考：<br><a href="https://blog.csdn.net/tongxin1101124/article/details/90213727">https://blog.csdn.net/tongxin1101124/article/details/90213727</a></p><p>指令级调试：<a href="http://happyseeker.github.io/virt/2017/07/06/qemu-i386-crash-in-linux-user-mode-on-loongson.html">http://happyseeker.github.io/virt/2017/07/06/qemu-i386-crash-in-linux-user-mode-on-loongson.html</a></p><p>系统内核调试：<a href="https://www.cnblogs.com/powerrailgun/p/12161295.html">https://www.cnblogs.com/powerrailgun/p/12161295.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/12/05/%E5%BE%AE%E4%BF%A1%E8%AF%BB%E4%B9%A6/"/>
      <url>/2021/12/05/%E5%BE%AE%E4%BF%A1%E8%AF%BB%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="手机备份到底备份什么"><a href="#手机备份到底备份什么" class="headerlink" title="手机备份到底备份什么"></a>手机备份到底备份什么</h1><blockquote><p>手机太卡了，换不起手机，所以就备份一下，刷一下</p></blockquote><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>   <img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206161820003.png" alt="image-20210206161820003"></p><p>手机开始卡了，内存也严重不足了，当然我可以只备份，再挨个清理，但是哪有刷机来的轻巧，所以我选择刷机。</p><blockquote><p>搞不明白，以前4+64和现在8+128有什么区别……内存大了，软件也大了，这扩容的钱不白花了？</p></blockquote><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol><li><p>申请深度测试权限</p><p>OPPO没有深度测试权限是没办法刷的</p><p> <img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206162131950.png" alt="image-20210206162131950"></p></li><li><p>下载固件包，去官网下就行了</p></li></ol><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206162435140.png" alt="image-20210206162435140"></p><ol start="3"><li><p>备份</p><p>备份什么呢？手机的文件那么多，如何快速有效的备份呢？</p><p>作为本文的核心内容，单独开一章来讲</p></li></ol><h2 id="如何快速备份"><a href="#如何快速备份" class="headerlink" title="如何快速备份"></a>如何快速备份</h2><p>全备份？请出去，你豪爽的行事风格已经与我白嫖和抠门的文章风格不一致了，如果你有部分备份的想法，再往下看</p><ol><li><p>有针对性</p><p>首先备份的东西一定要有价值，以我的角度，就是<strong>软件</strong>、<strong>文件</strong>、<strong>图片</strong>、<strong>有用的聊天记录</strong></p></li><li><p>备份方式</p><p>软件可以直接发送给自己的QQ小号，文件也是一样</p><p>有用的聊天记录直接截屏，和图片一起打包备份，至于没用的图片，每次拍完照自己删啊同志们</p></li></ol><h3 id="开始备份"><a href="#开始备份" class="headerlink" title="开始备份"></a>开始备份</h3><h4 id="文件备份"><a href="#文件备份" class="headerlink" title="文件备份"></a>文件备份</h4><p>啊文件备份嘛，这个真没啥经验，因为我很少用手机存文件，大多数都是在电脑上，手机上即使存了，我也会很快删除，所以大家及时备份文件吧哈哈哈哈</p><h4 id="聊天记录备份"><a href="#聊天记录备份" class="headerlink" title="聊天记录备份"></a>聊天记录备份</h4><p>截图，转到下面图片备份(<strong>别忘了短信备份</strong>)</p><h4 id="图片备份"><a href="#图片备份" class="headerlink" title="图片备份"></a>图片备份</h4><p><code>5G</code>超能力可以在线备份，我的话会离线备份，打开<code>开发者选项</code>，打开<code>USB</code>调试，连接电脑，把文件提取到电脑上某位置，并打包成压缩包，我就不多演示啦</p><p>当你清理完垃圾图片以后应该就会有类似的干净文件夹，所以直接打包就好啦</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206190621107.png" alt="image-20210206190621107"></p><h4 id="软件备份"><a href="#软件备份" class="headerlink" title="软件备份"></a>软件备份</h4><p>由于安卓的软件管理机制，不太好找。</p><p>所以有两种方法：</p><ol><li>有<code>QQ</code>会员，把软件发送给小号</li></ol><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206183929525.png" alt="image-20210206183929525"></p><ol start="2"><li>没有<code>QQ</code>会员，可以选择用<code>一个木函</code>操作一下，选择把要备份的应用，挨个提取安装包，如下图所示：</li></ol><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206183442163.png" alt="image-20210206183442163"></p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206184230051.png" alt="image-20210206184230051"></p><p>当然也是支持多选的呀~</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206184838865.png" alt="image-20210206184838865"></p><p>惊了，我这还是挑着备份的，<code>74</code>个应用！！</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206184915219.png" alt="image-20210206184915219"></p><p>备份完成之后，会提示备份的位置：</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206185054608.png" alt="image-20210206185054608"></p><p>然后软件备份，就懂了吧</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206185223274.png" alt="image-20210206185223274"></p><p>像上面说的备份图片一样，把软件也备份到电脑上就行了</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206191453636.png" alt="备份过程截图"></p><h2 id="顺便说说OPPO-Reno-ACE的刷机"><a href="#顺便说说OPPO-Reno-ACE的刷机" class="headerlink" title="顺便说说OPPO Reno ACE的刷机"></a>顺便说说OPPO Reno ACE的刷机</h2><p><code>ACE</code>刚出的时候还是挺香的，我又xx买了<code>OPPO</code>，不过好在申请上面说的深度测试不麻烦，所以深度测试申请完就没什么难的了，网上教程挺多的。简单说一下</p><ol><li><p>深度测试申请完成后，直接点击进入深度测试就可以进入<code>fastboot</code>了</p></li><li><p>进入<code>fastboot</code>之后，手机不要动，安装电脑安装<code>adb</code>和<code>fastboot</code>工具之后，执行<code>fastboot flashing unlock</code>，手机会进入另一个画面，然后用音量键选择解锁<code>bootloader</code>即可，两张图如下：</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206214020675.png" alt="选择解锁--unlock the bootloader"></p></li><li><p>解锁之后，输入<code>fastboot devices</code>检查<code>ADB/FASTBOOT</code>是否装好，如下图</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206214343955.png" alt="fastboot检查手机连接"></p></li><li><p>装完以后用<code>fastboot flash recovery path/to/the/path/of/twrp.img</code>刷入第三方<code>rec</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206214245993.png" alt="刷入第三方rec"></p></li><li><p>然后别忘了今天的目的，清理空间，所以选择格式化<code>Data</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206214522857.png" alt="格式化data"></p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206214705203.png" alt="输入yes开始格式化data"></p></li><li><p>格式化完<code>data</code>以后，要重启<code>rec</code>，否则原先的加密<code>data</code>会重亲覆盖现在的<code>data</code></p></li><li><p>然后在电脑上把固件包和magic复制到手机存储目录（忘记截图，做完第八步就没了）</p></li><li><p>刷入固件，重亲安装系统</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206215035175.png" alt="点击安装后，选择固件包"></p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210206214814719.png" alt="刷入固件"></p></li><li><p>重启进入系统</p><p>完成</p></li></ol><h2 id="备份恢复"><a href="#备份恢复" class="headerlink" title="备份恢复"></a>备份恢复</h2><p>上面说了信息的备份，那么如何快速恢复？</p><p>按照上面的划分：</p><ul><li><p>文件类，直接在电脑上待着</p></li><li><p>图片，复制到手机的DCIM文件夹内即可</p></li><li><p>软件，可以用命令逐个安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> `ls`;<span class="keyword">do</span> adb install <span class="variable">$file</span>;<span class="built_in">echo</span> <span class="variable">$file</span>; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>注意<code>ls</code>两边的不是引号，是键盘上数字<code>1</code>旁边的那个英文符号</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210207195559464.png" alt="adb批量安装软件"></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/12/05/%E6%91%8A%E7%89%8C%E4%BA%86%EF%BC%8C%E6%88%91%E6%8A%84%E8%A2%AD%E7%9A%84/"/>
      <url>/2021/12/05/%E6%91%8A%E7%89%8C%E4%BA%86%EF%BC%8C%E6%88%91%E6%8A%84%E8%A2%AD%E7%9A%84/</url>
      
        <content type="html"><![CDATA[<h1 id="摊牌了，我抄袭的"><a href="#摊牌了，我抄袭的" class="headerlink" title="摊牌了，我抄袭的"></a>摊牌了，我抄袭的</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/12/05/%E6%A0%91%E8%8E%93%E6%B4%BE-02%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2021/12/05/%E6%A0%91%E8%8E%93%E6%B4%BE-02%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="树莓派入门–在Linux下搭建开发环境"><a href="#树莓派入门–在Linux下搭建开发环境" class="headerlink" title="树莓派入门–在Linux下搭建开发环境"></a>树莓派入门–在Linux下搭建开发环境</h1><p>[toc]</p><blockquote><p>由于之前白嫖的cpolar内网穿透突然给我报token错误，我寻思可能是我用的太多，导致封号，所以就用树莓派自己搭一个内网穿透服务器，供日常远程操作用（功耗++++）</p></blockquote><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>系统：raspberry pi OS</p><p>架构：armv7(64bit)</p><h1 id="最后，点个关注不迷路"><a href="#最后，点个关注不迷路" class="headerlink" title="最后，点个关注不迷路"></a>最后，点个关注不迷路</h1><p><img src="https://p.pstatp.com/origin/137610000bfce4e396a63"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/12/05/%E6%A0%91%E8%8E%93%E6%B4%BE-01/"/>
      <url>/2021/12/05/%E6%A0%91%E8%8E%93%E6%B4%BE-01/</url>
      
        <content type="html"><![CDATA[<h1 id="树莓派入门–在Linux下搭建开发环境"><a href="#树莓派入门–在Linux下搭建开发环境" class="headerlink" title="树莓派入门–在Linux下搭建开发环境"></a>树莓派入门–在Linux下搭建开发环境</h1><p>[toc]</p><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>由于网上绝大多数教程应该都是在Windows在如何烧写系统之类的，而我身为一个Linux用户（已经爱上Linux），就为Linux下的使用增添加瓦吧~（其实是因为我之前白嫖的内网穿透开始莫名其妙不给我用了，可能是嫖太多了emmmm，考虑到白嫖工具的网速之类问题，顺手就自己搭一个内网穿透环境吧（见下篇））</p><p>系统：Ubuntu20.10</p><p>架构：X64</p><p>材料：64G- TF卡一张、读卡器一个、树莓派4B 4G板卡一个</p><h1 id="TF卡制作"><a href="#TF卡制作" class="headerlink" title="TF卡制作"></a>TF卡制作</h1><p>其实和Windows下的区别，无非就是制作系统的步骤不一样、ssh的步骤不一样~（好像也就这两步哈？）</p><h2 id="格式化分区"><a href="#格式化分区" class="headerlink" title="格式化分区"></a>格式化分区</h2><p>Ubuntu生态较为完备，一般可以直接使用<strong>磁盘工具</strong>进行设置：</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417104933418.png" alt="需要的话一开始可能还要格式化磁盘(推荐GPT或者不分区)"></p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417104957624.png" alt="卷名随便起就好啦"></p><p>如果没有这样的软件，当然用命令行都可以做到呀：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/sdb#sdb表示你的TF卡</span><br><span class="line">g#创建gpt磁盘</span><br><span class="line">n#创建分区</span><br><span class="line">默认   #起始扇区，考虑分区对齐，所以从2048开始</span><br><span class="line">默认   #结束扇区，用于将整个TF卡格式化</span><br><span class="line">t#改变分区类型</span><br><span class="line">C12A7328-F81F-11D2-BA4B-00A0C93EC93B#FAT的格式类型（EFI其实就是FAT）</span><br><span class="line">w</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417141850479.png" alt="操作过程"></p><p>上面EFI其实就是FAT类型的，这是由UEFI只支持FAT文件系统去承载EFI文件</p><p>如果不放心的话（强迫症<del>是我</del>）可以使用mkfs.vfat进行转换(.vfat就是fat的名字加强版，区别不打（vfat支持长文件名）)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.vfat /dev/sdb</span><br></pre></td></tr></table></figure><p>经过上面的分区操作，现在已经可以把系统写入到TF卡了！</p><h2 id="下载系统"><a href="#下载系统" class="headerlink" title="下载系统"></a>下载系统</h2><p>树莓派的官方系统在：<a href="https://www.raspberrypi.org/software/operating-systems/">https://www.raspberrypi.org/software/operating-systems/</a></p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417105359710.png" alt="谷歌翻译后的说明文字"></p><p>在国内的话其实有很多镜像网站非常好用，比如清华源：<a href="https://mirrors.tuna.tsinghua.edu.cn/raspberry-pi-os-images/">https://mirrors.tuna.tsinghua.edu.cn/raspberry-pi-os-images/</a></p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417110401792.png" alt="清华软件源"></p><p>1、2、3分别代表标准版、完整版、轻量版，其他见名知意，我选择了完整版最新的文件下载</p><h2 id="制作系统盘"><a href="#制作系统盘" class="headerlink" title="制作系统盘"></a>制作系统盘</h2><p>解压：下载的镜像是zip文件，所以要解压在linux下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip 2020-02-13-raspbian-buster-full.zip -d ./#-d后面的路径是解压路径，./就是解压在当前路径</span><br></pre></td></tr></table></figure><p>然后写入TF卡</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd bs=4M if=2020-02-13-raspbian-buster-full.img of=/dev/sdb</span><br></pre></td></tr></table></figure><p>bs=4M代表blokesize一次写入的大小，大部分系统是支持的，如果不放心可以改成1M，就是烧录慢一点而已</p><p>if代表in_file</p><p>of代表out_file</p><p>照着抄就行啦</p><p>然后烧录完的TF卡如下：</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417143521421.png" alt="和Linux下的分区很像嘛，毕竟树莓派系统也是Linux"></p><p>然后就开始插到板子里了</p><h1 id="上电、连线、开机"><a href="#上电、连线、开机" class="headerlink" title="上电、连线、开机"></a>上电、连线、开机</h1><ol><li>由于<del>没钱</del>没有准备相应的HDMI线、键盘等工具，所以只是个裸板，为了能够直接通过网络操作我的树莓派，所以要先在上面写完的TF卡中，打开其中的boot文件夹，在里面新建一个ssh文件：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch /media/boot/ssh</span><br></pre></td></tr></table></figure><ol start="2"><li>然后连接网线和电源线，其中电源线就用常规的手机充电器就行</li></ol><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417152631452.png" alt="树莓派平面图"></p><p>其中1、2、3分别插入TF卡、手机充电器、网线</p><p>对于一个裸机，这写就足够了，如果没有网线的话，也可以在上述boot文件夹下添加wifi连接参数，也可以的。</p><h2 id="开机"><a href="#开机" class="headerlink" title="开机"></a>开机</h2><p>树莓派并没有关机按键，所以插上电源以后就开机了，这时我们可以使用<code>arp -a</code>来查看局域网下的网络设备，其中排除所有已知ip以后就可以确定树莓派的ip地址</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417153300465.png" alt="arp -a查看局域网设备"></p><p>当然，手机上使用Fing（一个软件）一眼就能看出哪个是树莓派的ip：</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417153509940.png" alt="Fing查看局域网设备"></p><h1 id="ssh和vnc"><a href="#ssh和vnc" class="headerlink" title="ssh和vnc"></a>ssh和vnc</h1><h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><p>经过以上配置，开机以后便可以直接通过ssh连接树莓派：</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417153839091.png" alt="ssh连接树莓派"></p><p>其中1处的pi是这个系统的默认用户名，2处输入系统的默认密码是：“<code>raspberry</code>”</p><p>这样就进入系统了！</p><h2 id="VNC"><a href="#VNC" class="headerlink" title="VNC"></a>VNC</h2><p>要是想使用VNC，还需要一定的配置。</p><p>首先执行<code>sudo raspi-config</code></p><p>然后按照图示进行选择：</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417154320236.png" alt="接口配置"></p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417154405609.png" alt="vnc配置"></p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417154428794.png" alt="选择yes"></p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417154456062.png" alt="配置完成"></p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417154539971.png" alt="通过方向键或者Tab键选择finish退出"></p><p>此时树莓派的VNC功能也配置完成了！</p><p>只需要在本机上使用VNC-viewer软件即可查看树莓派的桌面了！</p><p>其中ubuntu自带的远程桌面：</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417154932014.png" alt="ubuntu自带远程桌面"></p><p>但是我遇到了这个：</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417163127838.png" alt="自带远程桌面连接树莓派报错"></p><p>然后我查到说树莓派自带的vncserver的加密方式与tigervnc viewer不同，所以只好换一个（也可以在树莓派上重新安装其他版本的vncserver），网上推荐realvnc-viewer，下载地址：<a href="https://www.realvnc.com/en/connect/download/viewer/">https://www.realvnc.com/en/connect/download/viewer/</a></p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417163426291.png" alt="realvnc-viewer"></p><p>输入ip地址，后面跟着vncserver的虚拟桌面序号，就可以连接成功啦~</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417163626417.png" alt="树莓派"></p><h1 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h1><p>经过一定的配置，现在已经是一个可以正常使用的小电脑啦</p><p>为了更快的安装软件，国内用户经常需要替换软件源，将相应文件按下图编辑并替换掉：</p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417165025018.png" alt="树莓派换源"></p><p>然后再更新apt仓库即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><p>如果不知道替换适合自己的版本的话，也可以去清华大学软件源查看：地址——<a href="https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/">https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/</a></p><p><img src="https://gitee.com/mxdon/img/raw/master/img/image-20210417165220279.png" alt="清华大学软件源说明"></p><h1 id="最后，点个关注不迷路"><a href="#最后，点个关注不迷路" class="headerlink" title="最后，点个关注不迷路"></a>最后，点个关注不迷路</h1><p><img src="https://p.pstatp.com/origin/137610000bfce4e396a63"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/12/05/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
      <url>/2021/12/05/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/</url>
      
        <content type="html"><![CDATA[<h1 id="内网穿透软件推荐"><a href="#内网穿透软件推荐" class="headerlink" title="内网穿透软件推荐"></a>内网穿透软件推荐</h1><p>[toc]</p><blockquote><p> 上一篇介绍了内网穿透的过程，这一篇推荐一下内网穿透的工具(<strong>需要看结果的直接滑到最后吧</strong>)：</p></blockquote><h2 id="花生壳"><a href="#花生壳" class="headerlink" title="花生壳"></a>花生壳</h2><p>链接：<code>https://hsk.oray.com/</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210110004739378.png" alt="花生壳"></p><p><strong>简评</strong></p><p><strong>花生壳</strong>应该算是业界大佬，平常大家使用的<strong>向日葵远程控制软件</strong>就是该公司的产品</p><ul><li>优点：信誉保障，教程完善，界面美观，有免费套餐两条映射，<strong>支持在网站查看远程端口</strong></li><li>缺点：免费套餐<strong>限流量</strong>，需要实名认证，支持架构少</li></ul><h2 id="cpolar"><a href="#cpolar" class="headerlink" title="cpolar"></a>cpolar</h2><p>链接：<a href="https://www.cpolar.com/">https://www.cpolar.com/</a></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210110004512119.png" alt="cpolar"></p><p><strong>简评</strong></p><ul><li>优点： 有免费套餐，<strong>不限流量</strong>，不需要手机号注册，支持架构多，使用简单，界面简洁，<strong>支持在网站查看远程端口</strong></li><li>缺点：网站指引不太明确</li></ul><h2 id="natapp"><a href="#natapp" class="headerlink" title="natapp"></a>natapp</h2><p>链接：<code>http://www.neiwangchuantou.cn/archives/234.html</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210110004155946.png" alt="natapp"></p><p><strong>简评</strong></p><ul><li>优点：界面简洁，有免费套餐，<strong>不限流量</strong>，支持架构多，文档完整</li><li>缺点：需要实名认证</li></ul><h2 id="网云穿"><a href="#网云穿" class="headerlink" title="网云穿"></a>网云穿</h2><p>链接：<code>https://www.xiaomy.net/</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210110000624334.png" alt="网云穿"></p><p><strong>简评</strong></p><ul><li>优点：网站界面清晰明了，有免费套餐</li><li>缺点：手机号注册，免费套餐<strong>限流量</strong>，支持架构不多</li></ul><h2 id="行云管家"><a href="#行云管家" class="headerlink" title="行云管家"></a>行云管家</h2><p>链接：<code>https://www.cloudbility.com/default.html</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109221903903.png" alt="行云管家"></p><p><strong>简评</strong></p><ul><li>优点：界面清爽</li><li>缺点：需要手机号注册，<strong>无免费套餐</strong></li></ul><h2 id="nat123"><a href="#nat123" class="headerlink" title="nat123"></a>nat123</h2><p>链接：<code>http://nat123.com/</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109221344863.png" alt="nat123"></p><p><strong>简评</strong></p><ul><li>优点：信誉保障，支持架构多，教程完善，有免费套餐，不需要手机号注册</li><li>缺点：界面不太美观，需要实名</li></ul><h2 id="ngrok"><a href="#ngrok" class="headerlink" title="ngrok"></a>ngrok</h2><p>链接：<code>http://www.ngrok.cc/</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109220716701.png" alt="ngrok"></p><p>链接：<code>https://ngrok.com/download</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109220511410.png" alt="ngrok"></p><p><strong>简评</strong></p><ul><li><p>优点：第一种有免费套餐，支持架构多，<strong>不限流量</strong>，<strong>国外网站不需要手机号注册</strong>，</p><p>第二种有免费套餐，<strong>不限流量</strong>，不需要手机号注册，<strong>端口不会变</strong></p></li><li><p>缺点：<del>第一种对英文不够用的同学不太友好</del>，</p></li></ul><h2 id="frp"><a href="#frp" class="headerlink" title="frp"></a>frp</h2><p>链接：<code>http://www.chuantou.org/</code></p><p>开源地址：<code>https://github.com/fatedier/frp</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109215409574.png" alt="frp"></p><p>链接：<code>https://www.natfrp.com/</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109215545561.png" alt="frp"></p><p><strong>简评</strong></p><ul><li><p>优点：第一种开源，维护多，自持自定义，<strong>完全免费</strong>，<strong>无需注册</strong>；</p><p>第二种有免费套餐，五条映射线路，不需要手机号注册，自带更新程序，支持架构多，可以刷路由器；</p></li><li><p>缺点：第一种使用不便；</p><p>第二种<strong>限流量</strong>，教程有点乱</p></li></ul><h2 id="神卓"><a href="#神卓" class="headerlink" title="神卓"></a>神卓</h2><p>链接：<code>https://www.shenzhuohl.com/index.html</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109215038546.png" alt="神卓"></p><p><strong>简评</strong></p><ul><li>优点：有免费套餐，<strong>不限流量</strong></li><li>缺点：免费套餐<strong>仅一条映射</strong>，手机号注册，网站界面相对较花</li></ul><h2 id="飞鸽"><a href="#飞鸽" class="headerlink" title="飞鸽"></a>飞鸽</h2><p>链接：<code>https://www.fgnwct.com/</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109214713118.png" alt="飞鸽"></p><p><strong>简评</strong></p><ul><li>优点：有免费套餐，网站界面简洁，支持<code>Mips</code>、群辉等架构，可以刷路由器，注册不需要手机号</li><li>缺点：免费套餐<strong>限流量</strong></li></ul><h2 id="闪库"><a href="#闪库" class="headerlink" title="闪库"></a>闪库</h2><p>链接：<code>http://www.ipyingshe.com/</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109214234709.png" alt="闪库"></p><p><strong>简评</strong></p><ul><li>优点：界面做的好看</li><li>缺点：注册需要客户端，没有使用教程，版本架构支持的少，<strong>文件偏大</strong></li></ul><h2 id="魔法隧道"><a href="#魔法隧道" class="headerlink" title="魔法隧道"></a>魔法隧道</h2><p>链接：<code>http://www.mofasuidao.cn/</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109214103290.png" alt="魔法隧道"></p><p><strong>简评</strong></p><p>貌似没有免费的套餐，软件也四年没更新了，需要手机号注册，支持架构少</p><h2 id="go-intranet-forward"><a href="#go-intranet-forward" class="headerlink" title="go-intranet-forward"></a>go-intranet-forward</h2><p>链接：<code>https://gitlab.com/king011/go-intranet-forward</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109213201092.png" alt="go-intranet-forward"></p><p><strong>简评</strong></p><ul><li>优点：代码开源，可以自己修改，服务器也支持自定义，不用注册帐号</li><li>缺点：需要自己配置<code>Golang</code>环境，已经不维护了，想白嫖公网的就算了吧</li></ul><h2 id="ZeroTier"><a href="#ZeroTier" class="headerlink" title="ZeroTier"></a>ZeroTier</h2><p>链接：<code>https://www.zerotier.com/</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210110004937226.png" alt="ZeroTier"></p><p><strong>简评</strong></p><ul><li>优点：有免费套餐，<strong>国外公网不限流量</strong>，支持架构多，不需要手机号注册</li><li>缺点：<del>对英文不够用的同学不太友好</del></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>个人推荐：<code>cpolar</code> &gt; <code>ngrok</code> &gt; <code>神卓</code> &gt; <code>natapp</code> &gt; <code>frp</code> &gt;  <code>网云穿</code> &gt; <code>ZeroTier</code></p><p>因为上述的基本都免流量，这才是使用最舒服的点，至于钞能力用户：</p><p>个人推荐：<code>花生壳</code> &gt; <code>网云穿</code> &gt; <code>行云管家</code> &gt; <code>nat123</code> &gt; <code>其他</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/12/05/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7%E5%A4%A7%E5%85%A8/"/>
      <url>/2021/12/05/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="远程控制——内网穿透篇"><a href="#远程控制——内网穿透篇" class="headerlink" title="远程控制——内网穿透篇"></a>远程控制——内网穿透篇</h1><p>[toc]</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>因为某些原因，想要远程控制自己的电脑，但是公司条件不允许常规的远程软件，所以就想到了利用<code>内网穿透</code>+<code>ssh</code>进行简单的远程操作，起码传输文件和项目编译都会稍微方便一点点～</p></blockquote><p><strong>说明，本文选择使用<code>cpolar</code>进行测试，为了排除局域网的可能性干扰，本文测试环境为</strong>：</p><p>受控端：<code>ubuntu20.04</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109170919872.png" alt="ubuntu"></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109180844181.png" alt="ubuntu的ip地址"></p><p>控制端：<code>Android-Termux</code></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109171313732.png" alt="Termux"></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109180955289.png" alt="手机的ip地址"></p><h2 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h2><ul><li><p>开通帐号</p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109173503110.png"></p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109173547142.png" alt="注册信息"></p></li></ul><p>​    记录下这一步是因为有的软件需要<strong>实名认证</strong>，而有的不需要，侧面也反映一些问题，大家自己品就好了～</p><p>​    注册账户基本是必要的，所以有<strong>互联网洁癖</strong>的同志可以注意一下;</p><ul><li><p>注册完成后选择免费套餐即可</p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109174905804.png" alt="套餐选择"></p></li><li><p>下载软件</p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109175131481.png" alt="cpolar下载项"></p></li></ul><p>​    如果没注册的话，可以从这里直接下载</p><p>​    <img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109173344438.png" alt="首页下载"></p><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><p>如图，下载之后还是需要在登录后的“<strong>仪表盘</strong>”界面找到使用方法和<code>token(authtoekn)</code>，有的网站可能叫“<strong>控制台</strong>”或者“<strong>我的隧道</strong>”;</p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109175354731.png" alt="使用教程"></p><p>第二步：在<code>window</code>可以直接右键解压，<code>linux</code>或<code>MacOS</code>的话可以使用命令解压（其实右键也可以，提前给文件<code>chmod 777</code>、<code>chown $user</code>也可以右键解压）</p><p>比如我把软件解压到<code>/opt/cpolar</code>下</p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109181301477.png" alt="解压与使用"></p><p>第三步：连接账户，只要把上图中步骤三的命令复制下来，在命令行中执行即可，需要注意的是，要在文件解压的环境下执行，比如说我把文件下载并解压到<code>/opt/cpolar</code>下，那么就在<code>/opt/cpolar</code>这执行命令：</p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109182439411.png" alt="初次执行"></p><p>如上图，在linux下可能会有执行权限的问题，所以再执行一下<code>sudo chmod a+x cpolar</code>就好啦～</p><p>这时显示配置文件已保存，所以接下来的执行就可以看第四步啦～</p><ul><li><p>运行</p><p>由于每种软件的运行方式多少都会有些不一样，所以建议大家看一下操作文档，比如官网的文档，绝大多数的产品都会附赠操作文档，所以有什么问题要优先阅读文档！</p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109182809962.png" alt="官网的文档"></p><p>通过阅读文档知道要使用<code>./cpolar tcp 22</code>命令来将本地的<code>22</code>端口（<code>ssh</code>的默认监听端口）映射到公网上，所以我们来试一下：</p><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109183246425.png" alt="执行结果"></p><p>执行之后出现了这样的界面，红框中的链接就是我需要的公网链接！</p></li></ul><h3 id="连接成功"><a href="#连接成功" class="headerlink" title="连接成功"></a>连接成功</h3><p><img src="https://gitee.com/mxdon/img/raw/master/2021/image-20210109185121822.png" alt="连接成功"></p><p>由于使用电脑截图手机，清晰度和完整度不方便同时兼顾，大家凑合看吧～</p><p>首先是第一行，<code>ssh</code>就是我此次要达到的目的，远程登录无界面的的操作台，<code>-p</code>代表端口，后面的<code>10218</code>就是上面执行<code>cpolar</code>时产生的端口号（**免费用户每次开启的端口是随机的，<del>所以我一般都不关</del>**），<code>mxdon</code>是我的用户名，<code>@+网址</code>是固定搭配了。这样可以看到下面，已经是我<code>ubuntu</code>的界面啦～远程操作也就完成啦～</p><h3 id="远程桌面"><a href="#远程桌面" class="headerlink" title="远程桌面"></a>远程桌面</h3><p>其实远程控制桌面也是可以的，<code>windows</code>下默认的远程端口是<code>3389</code>，只要执行<code>.cpolar tcp 3389</code>即可通过相应的方式远程控制，由于我手机里的<code>Termux</code>没有安装图形化控制界面，所以这里就不演示了，感兴趣的同学完全可以<del>收买我做教程</del>看看别的教程hhhhh</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/12/05/Ubuntu19.10%E4%BD%BF%E7%94%A8Qemu%E5%AE%89%E8%A3%85%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
      <url>/2021/12/05/Ubuntu19.10%E4%BD%BF%E7%94%A8Qemu%E5%AE%89%E8%A3%85%E6%A0%91%E8%8E%93%E6%B4%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu19-10使用Qemu安装树莓派"><a href="#Ubuntu19-10使用Qemu安装树莓派" class="headerlink" title="Ubuntu19.10使用Qemu安装树莓派"></a>Ubuntu19.10使用Qemu安装树莓派</h1><blockquote><p>之前一直是在Windows下鼓捣虚拟机，这次试试qemu</p></blockquote><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装qemu"><a href="#安装qemu" class="headerlink" title="安装qemu"></a>安装qemu</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install qemu</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/mxdon/img/raw/master/img/ac90e76e-456d-468b-a0d9-1ceba4b51e93.png"></p><h3 id="安装树莓派"><a href="#安装树莓派" class="headerlink" title="安装树莓派"></a>安装树莓派</h3><p>在github上找到相应版本的内核和设备树文件。<br><img src="https://gitee.com/mxdon/img/raw/master/img/9daa7d40-b017-45ea-a4c6-ef36585853bf.png"><br>先创建一个项目目录，把镜像文件、设备树文件，和内核文件都放进去<br><img src="https://gitee.com/mxdon/img/raw/master/img/f60a70ac-1dbd-4bda-8477-0262cb5fa05f.png"><br>然后<code>fdisk -l 2020-02-13-raspbian-buster.img</code>查看硬盘实体使用情况<br><img src="https://gitee.com/mxdon/img/raw/master/img/c645d24a-54c2-48e9-9832-fb1b057b0e13.png"><br>将<code>img2</code>的起点地址乘以单元扇区大小，得到镜像应该挂载的偏移量。<br><img src="https://gitee.com/mxdon/img/raw/master/img/bf603b12-b393-48af-a1bb-d6c6fa81c760.png"><br><code>sudo mount -v -o offset=272629760 -t ext4 ~/qemu_raspi/2020-02-13-raspbian-buster.img /mnt/raspbian</code>其中的<code>/mnt/raspbian</code>文件夹要提前建好<br><img src="https://gitee.com/mxdon/img/raw/master/img/f2b268bc-9d61-48e9-bb91-666fb14e9176.png"><br>接下来编辑<code>/mnt/raspbian/ld.so.preload</code>文件，将其中的内容注释（行首加“#”注释），然后使用umount卸载已经加载的文件系统</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo umount /mnt/raspbian</span><br></pre></td></tr></table></figure><p>然后执行模拟树莓派的命令，参考github上的说明：<br><img src="https://gitee.com/mxdon/img/raw/master/img/a1d75ece-522a-4e83-a2a7-f45f72ba4682.png"><br>修改相关参数，最终命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-system-arm -kernel ~/qemu_raspi/kernel-qemu-4.19.50-buster -cpu arm1176 -m 256 -M versatilepb -serial stdio -append &quot;root=/dev/sda2 rootfstype=ext4 rw&quot; -hda ~/qemu_raspi/2020-02-13-raspbian-buster.img -redir tcp:5022::22 -no-reboot</span><br></pre></td></tr></table></figure><p>其中参数可以通过使用<code>qemu-system-arm -help | grep &quot;\-参数&quot;</code>的命令形式，查看命令的相关介绍：<br><img src="https://gitee.com/mxdon/img/raw/master/img/7541d2b2-d89f-4c2e-847d-e289a8778e84.png"></p><blockquote><ul><li>-M：设定模拟的开发板类型. versatilepb 是 ARM Versatile Platform Board<ul><li>-cpu：select CPU (‘-cpu help’ for list)——指定cpu类型，模拟ARM1176 CPU. Raspberry Pi 板上搭载了 Broadcom BCM2835, 这个处理器用的是ARM1176JZ-F.</li><li>-m：[size=]megs[,slots=n,maxmem=size]——RAM的大小是256MB. 设定成比256MB大的值板子好像不能启动.</li><li>-drive：[file=file][,if=type][,bus=n][,unit=m][,media=d][,index=i]——指定要制作文件、输入类型、……</li><li>-net：[user|tap|bridge|socket][,option][,option][,…](use the -netdev option if possible instead)——大概是网络连接的一些参数</li><li>-dtb：file    use ‘file’ as device tree image——是镜像文件解压出来有的一些文件，叫设备树引导文件，与内核文件共同编译成支持qemu启动的内核</li><li>-kernel：bzImage use ‘bzImage’ as kernel image——内核</li><li>-serial stdio——重定向Guest 的串口到Host的标准输入输出.</li><li>-append：cmdline use ‘cmdline’ as kernel command line——使用“ cmdline”作为内核命令行</li></ul></li></ul></blockquote><p>然后便开始启动树莓派：<br><img src="https://gitee.com/mxdon/img/raw/master/img/7a95fa3b-0c69-4323-be09-48241748af15.png"><br>这一步我还以为是创建用户，想了一大会密码，<br><img src="https://gitee.com/mxdon/img/raw/master/img/4abfdaa8-cfc9-4089-9642-4a05fd2eabc8.png"><br>结果用户密码是固定的：用户名: pi, 密码: raspberry<br><img src="https://gitee.com/mxdon/img/raw/master/img/67879246-8605-4fea-9af4-877b50ad2183.png"><br>终于登录成功了。</p><h3 id="图形化界面"><a href="#图形化界面" class="headerlink" title="图形化界面"></a>图形化界面</h3><p>上面可以看到是没有图形化界面的，但是运行最开始时有写vnc的相关信息，所以再装一下vnc viewer<br><img src="https://gitee.com/mxdon/img/raw/master/img/0b4efa23-fe41-4c69-9bc3-b29b8d76f926.png"><br>官网下载即可。<br><img src="https://gitee.com/mxdon/img/raw/master/img/7413d847-95ac-45bf-b502-f4ddacda836a.png"><br>安装<br><img src="https://gitee.com/mxdon/img/raw/master/img/1de786a3-cfb1-47dd-b0a6-b4b7ad2d8275.png"><br>软件自动显示了5900端口的树莓派<br><img src="https://gitee.com/mxdon/img/raw/master/img/97206bcb-68bb-42fa-986d-ed95279ddcff.png"><br>但是还是没有图形界面显示<br><img src="https://gitee.com/mxdon/img/raw/master/img/b69cce76-d4e4-428a-bbf9-921d0c02fd54.png"><br>参考其中的日志<br><img src="https://gitee.com/mxdon/img/raw/master/img/e40bd7e6-14cf-4ed4-9fc6-64056b5c6d43.png"><br>经过排查，是内核文件不匹配造成的，这一点在提供内核的github界面也有说明，万能设备树文件支持的是<code>stretch</code>系列的树莓派<br><img src="https://gitee.com/mxdon/img/raw/master/img/61d8a762-fdc0-43cf-abec-3fe18b35ce10.png"><br>所以更换镜像为：<code>2018-06-27-raspbian-stretch.img</code>，内核更改为：<code>kernel-qemu-4.14.79-stretch</code>，重新按照之前的步骤重复即可。最终打开图形界面：<br><img src="https://gitee.com/mxdon/img/raw/master/img/81ae7a84-4328-419b-913a-f113625b7422.png"></p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>树莓派——清华开源软件镜像站：<code>https://mirrors.tuna.tsinghua.edu.cn/raspbian-images/raspbian/images/</code></p><p>树莓派——树莓派实验室（好像是官网）：<code>https://shumeipai.nxez.com/download#os</code></p><p>vncviewer：<code>https://www.realvnc.com/en/connect/download/viewer/</code></p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://blog.csdn.net/yalecaltech/article/details/90524245">QEMU搭建树莓派环境</a><br><a href="https://blog.csdn.net/talkxin/article/details/79505826">使用qemu虚拟机运行树莓派(linux kernel 4.9)</a><br><a href="https://blog.csdn.net/weixin_30256505/article/details/101739642">Windows中使用QEMU创建树莓派虚拟机</a><br><a href="https://www.linuxidc.com/Linux/2014-08/105511.htm">用QEMU模拟树莓派Raspberry Pi的方法</a><br><a href="https://github.com/dhruvvyas90/qemu-rpi-kernel">qemu-rpi-kernel</a><br><a href="https://azeria-labs.com/emulate-raspberry-pi-with-qemu/">RASPBERRY PI ON QEMU</a><br><a href="https://www.cnblogs.com/penny772866/p/5927796.html">ubuntu下使用vnc viewer</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/12/05/%E7%82%AB%E7%8C%BF%E5%AF%BC%E8%88%AA%E2%80%94%E2%80%94%E6%89%80%E8%B0%93%E7%B2%BE%E8%87%B4%EF%BC%8C%E5%B0%B1%E6%98%AF%E5%A6%82%E6%AD%A4/"/>
      <url>/2021/12/05/%E7%82%AB%E7%8C%BF%E5%AF%BC%E8%88%AA%E2%80%94%E2%80%94%E6%89%80%E8%B0%93%E7%B2%BE%E8%87%B4%EF%BC%8C%E5%B0%B1%E6%98%AF%E5%A6%82%E6%AD%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="炫猿导航——所谓精致，就是如此（内附邀请码获取方式）"><a href="#炫猿导航——所谓精致，就是如此（内附邀请码获取方式）" class="headerlink" title="炫猿导航——所谓精致，就是如此（内附邀请码获取方式）"></a>炫猿导航——所谓精致，就是如此（内附邀请码获取方式）</h1><blockquote><p>前两天推送的封装系统，里面的谷歌浏览器更受大家的喜爱啊，但是发现了<strong>炫猿导航</strong>，我觉的大家收藏这一个网址就够了。<strong>『ALL IN ONE , ONE FOR ALL』</strong></p></blockquote><span id="more"></span><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>轩辕导航（<code>http://xydh.fun/</code>）</strong>网站上根本没有简介的地方，所谓<strong>干净</strong>，就是如此。</p><p>那么如果你要问我，<strong>炫猿导航</strong>是什么？</p><p>我大概会告诉你，这就是“<strong>帮你把你最需要的内容都收藏在一个条理清晰而美丽的界面上</strong>”<br><img src="D:\github\Blog\source_posts\​炫猿导航——所谓精致，就是如此\a3d7122d-afa9-4095-bff7-f43750413621.png" alt="炫猿导航界面完整截图"></p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><h3 id="1、应有尽有"><a href="#1、应有尽有" class="headerlink" title="1、应有尽有"></a>1、应有尽有</h3><p>许多小伙伴经常需要找一些<strong>资源</strong>或者<strong>工具</strong>会变得无从下手，那么请看这↓↓↓<br><img src="D:\github\Blog\source_posts\​炫猿导航——所谓精致，就是如此\24e792a2-9f16-4cbf-b25d-427bde0aaef9.png" alt="软件分栏"><br>看这↓↓↓<br><img src="D:\github\Blog\source_posts\​炫猿导航——所谓精致，就是如此\633557e0-833d-494c-8bd4-27f7e4a7aac2.png" alt="影视分栏"><br>再看这↓↓↓<br><img src="D:\github\Blog\source_posts\​炫猿导航——所谓精致，就是如此\88b197ef-f1ca-462d-8454-84ec7613ef68.png" alt="工具分栏"></p><blockquote><p>导航这么细致了还会在互联网迷路嘛？</p></blockquote><h3 id="2、自定义"><a href="#2、自定义" class="headerlink" title="2、自定义"></a>2、自定义</h3><p>炫猿导航最吸引我的一点就是，支持自定义设置，支持我们根据自己的需要，<strong>定制一款专属自己的导航网页</strong>。<br>比如这样：<br><img src="D:\github\Blog\source_posts\​炫猿导航——所谓精致，就是如此\eaa59d14-212c-4371-a3d7-b23efa0785fd.png" alt="Arica的导航小站"><br>还有这样：<br><img src="D:\github\Blog\source_posts\​炫猿导航——所谓精致，就是如此\4c3f7076-92ec-483b-8701-f65f09491bf4.png" alt="Hanjiangke"><br>或者这样：<br><img src="D:\github\Blog\source_posts\​炫猿导航——所谓精致，就是如此\f3805804-96fc-4352-bb78-32240057960b.png" alt="墨韵诗台"></p><blockquote><p>上面换的可不止是背景，里面的分栏内容也有变化噢（我也在尝试自定义一个来着）</p></blockquote><h2 id="邀请码"><a href="#邀请码" class="headerlink" title="邀请码"></a>邀请码</h2><p>我借着这个公众号有幸得到一些邀请码，所以同样需要邀请码的小伙伴们，为了避免公众号推文的延迟造成的不公平因素，</p><p><strong>今天</strong><code>20：20</code><strong>我会在学习群中公布邀请码</strong></p><p>后台回复“<strong>学习群</strong>”加入群聊</p><blockquote><p>最后，炫猿导航网址：<code>http://xydh.fun/</code></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
